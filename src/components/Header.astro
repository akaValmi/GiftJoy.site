---
interface MenuOption {
  name: string;
  url: string;
}

const menuOptions: MenuOption[] = [
  { name: 'Inicio', url: '/' },
  { name: 'Sobre Nosotros', url: '/about' },
  { name: 'Blog', url: '/blog/menu' },
  { name: 'FAQ', url: '/FAQ' }
];
---

<astro>
  <head>
    <title>Ejemplo de Menú Móvil en Astro</title>
  </head>
  
  <header>
    <nav class="bg-yellow-50 border-gray-200 px-4 lg:px-6 py-2.5">
      <div class="flex flex-wrap justify-between items-center mx-auto max-w-screen-xl">
        <a href="/" class="flex items-center">
          <img src='/logo-1.png' class="mr-3 h-16" alt="Logo" />
        </a>
        <div class="flex items-center lg:order-2">
          <a href="#" class="bg-yellow-200 text-gray-800 hover:bg-gray-50 focus:ring-4 focus:ring-gray-300 font-medium rounded-lg text-sm px-4 lg:px-5 py-2 lg:py-2.5 mr-2 focus:outline-none">Ingresar</a>
          <div
            id="mobile-menu-button"
            class="w-9 h-10 cursor-pointer flex flex-col items-center justify-center lg:hidden"
          >
            <div
              class="w-[50%] h-[2px] bg-black rounded-sm transition-all duration-300 origin-left translate-y-[0.45rem] peer-checked:rotate-[-45deg]"
            ></div>
            <div
              class="w-[50%] h-[2px] bg-black rounded-md transition-all duration-300 origin-center peer-checked:hidden"
            ></div>
            <div
              class="w-[50%] h-[2px] bg-black rounded-md transition-all duration-300 origin-left -translate-y-[0.45rem] peer-checked:rotate-[45deg]"
            ></div>
          </div>
        </div>
        <div class="hidden justify-between items-start w-full lg:flex lg:w-auto lg:order-1">
          <ul class="flex flex-col mt-4 font-medium lg:flex-row lg:space-x-8 lg:mt-0">
            {menuOptions.map((option, index) => (
              <li key={index}>
                <a href={option.url} class="block py-2 pr-4 pl-3 text-gray-700 border-b border-gray-100 hover:bg-gray-50 lg:hover:bg-transparent lg:border-0 lg:hover:text-primary-700 lg:p-0">
                  {option.name}
                </a>
              </li>
            ))}
          </ul>
        </div>
      </div>
      <div class="lg:hidden hidden w-full" id="mobile-menu">
        <ul class="flex flex-col mt-4 font-medium lg:mt-0">
          {menuOptions.map((option, index) => (
            <li key={index}>
              <a href={option.url} class="block py-2 pr-4 pl-3 text-gray-700 border-b border-gray-100 hover:bg-gray-50 lg:hover:bg-transparent lg:border-0 lg:hover:text-primary-700 lg:p-0">
                {option.name}
              </a>
            </li>
          ))}
        </ul>
      </div>
    </nav>
  </header>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const mobileMenuButton = document.getElementById('mobile-menu-button');
      const mobileMenu = document.getElementById('mobile-menu');

      if (mobileMenuButton && mobileMenu) {
        mobileMenuButton.addEventListener('click', () => {
          mobileMenu.classList.toggle('hidden');
        });

        // Close the mobile menu when an option is clicked
        const menuLinks = mobileMenu.querySelectorAll('a');
        menuLinks.forEach(link => {
          link.addEventListener('click', () => {
            mobileMenu.classList.add('hidden');
          });
        });
      }
    });
  </script>
</astro>
